#!/bin/bash -l
# Checks for Gemfile, and installs bundle if there
# are any unsatisfied gem dependens
# ------------------------------------------------

# Quit if previous bundle install failed
if [ -e '.bundle_install_failed~' ]; then
  if ! grep -q 'SILENT' '.bundle_install_failed~'; then
    notify-send "Bundle aborted" "Previous bundle install failed for $(basename $PWD).\nPlease either fix this or run:\necho SILENT > \".bundle_install_failed~\"."
  else
    echo "== ABORT: Previous bundle install failed for $(basename $PWD)."
  fi
  exit
fi

# Use .rvmrc, or default ruby
if [ -e .rvmrc ]; then . .rvmrc; else rvm default; fi

if [ -e Gemfile ]; then
  # Ensure bundler is installed
  ensure_gem bundler

  echo "== in: $PWD"
  if ! bundle check; then
    if bundle install; then
      notify-send "Bundle installed" "Updated gems for $(basename $PWD) ($(parse_ruby_version))"
    else
      notify-send "Bundle failed" "Could not update gem dependencies for $(basename $PWD) ($(parse_ruby_version))"
      # Create a flag so that we don't keep retrying failed bundle installs
      git_exclude '.bundle_install_failed~'
      #touch '.bundle_install_failed~'
      echo SILENT > '.bundle_install_failed~'
    fi
  fi
fi