#!/bin/bash -l
# Checks for Gemfile, and installs bundle if there
# are any unsatisfied gem dependens
# ------------------------------------------------

# Quit if previous bundle install failed
SKIP_FILE=".skip_bundle_auto_install~"

if [ -e "$SKIP_FILE" ]; then
  if ! grep -q 'SILENT' "$SKIP_FILE"; then
    notify-send "Bundle aborted" "Previous bundle install failed for $(basename $PWD).\nPlease either fix this or run:\necho SILENT > \"$SKIP_FILE\"."
  else
    echo "== ABORT: Previous bundle install failed for $(basename $PWD)."
  fi
  exit
fi

if type rvm > /dev/null 2>&1; then
  # Use .rvmrc, or default ruby
  if [ -e .rvmrc ]; then . .rvmrc; else rvm default; fi
fi

if [ -e Gemfile ]; then
  # Ensure bundler is installed
  ensure_gem bundler

  echo "== in: $PWD"
  if ! bundle check; then
    if bundle install; then
      notify-send "Bundle installed" "Updated gems for $(basename $PWD) ($(parse_ruby_version))"
    else
      notify-send "Bundle failed" "Could not update gem dependencies for $(basename $PWD) ($(parse_ruby_version))"
      # Create a flag so that we don't keep retrying failed bundle installs
      git_exclude "$SKIP_FILE"
      touch "$SKIP_FILE"
    fi
  fi
fi