#!/bin/bash -l
# Updates cached Travis CI status if repo contains .travis.yml
#
# Creates and excludes .travis_status~
# Use with SCM breeze repo index.
# Requires 'travis-ci' script from https://gist.github.com/1708408
# Add the following line to your crontab: (updates every 2 minutes)
# */2 * * * * /bin/bash -c '. $HOME/.bashrc && git_index --rebuild && git_index --batch-cmd update_travis_ci_status'
#
source "$DOTFILES_PATH/_shared_bin/functions.sh"
REVISION_FILE=".travis_status_revision~"

abort_if_revision_unchanged "$REVISION_FILE"

if [ -e ".travis.yml" ]; then
  rvmrc_or_default

  # Ensure hub gem is installed
  if ! gem list hub | grep -q "^hub "; then
    echo "Installing 'hub' for current gemset"
    gem install hub
  fi
  # Ensure json gem is installed
  if ! gem list json | grep -q "^json "; then
    echo "Installing 'json' for current gemset"
    gem install json
  fi

  if type ruby > /dev/null 2>&1 && type travis-ci > /dev/null 2>&1; then
    stat_file=".travis_status~"
    tmp_stat_file="$stat_file"".tmp"

    # Exclude stat files from git repo
    git_exclude "$stat_file"
    git_exclude "$tmp_stat_file"

    # Either update all branches, or only current branch
    if [ "$UPDATE_ALL_BRANCHES" = "true" ]; then
      all_branches=$(\git branch -a)
      # All branches on origin remote that have copies
      branches=$(comm -12 <(echo "$all_branches" | \
                                  sed "s/ *remotes\/origin\///;tm;d;:m;/^HEAD/d;" | sort) \
                                <(echo "$all_branches" | \
                                  sed "/ *remotes\//d;s/^[\* ]*//" | sort))
      # Create a new, blank temp file
      echo -n > "$tmp_stat_file"
    else
      # Only current branch
      branches="$(/usr/local/bin/git branch 2> /dev/null | sed "s/^\* \([^ ]*\)/\1/;tm;d;:m")"
      # Copy current file to temp file
      touch "$stat_file"
      cp -f "$stat_file" "$tmp_stat_file"
    fi

    for branch in $branches; do
      travis_output=$(DEFAULT_TO_LATEST_BUILD=true travis-ci "$branch" 2>&1)
      status=""
      case "$travis_output" in
      *built\ OK*)    status="passed";;
      *failed*)       status="failed";;
      *in\ progress*) status="running";;
      esac

      # If branch has a build status
      if [ -n "$status" ]; then
        if grep -q "^$branch" "$tmp_stat_file"; then
          # Replace branch's build status
          sed -e "s/^$branch .*/$branch $status/" -i "$tmp_stat_file"
        else
          # Append new line for branch
          echo "$branch $status" >> "$tmp_stat_file"
        fi

        echo "$branch: $status  (in $(pwd))"
      fi
    done

    # Replace current stat file with finished update
    mv -f "$tmp_stat_file" "$stat_file"

    store_current_revision "$REVISION_FILE"
  fi
fi
